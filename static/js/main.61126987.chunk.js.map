{"version":3,"sources":["logo.svg","components/header.js","components/sidebar.js","components/imageUploader.js","components/googleMap.js","components/content.js","containers/tripago.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","class","Component","Sidebar","to","instance","axios","create","baseURL","ImageUploader","props","onDrop","pictureFiles","pictureDataURLs","setState","state","pictures","concat","onUpload","a","console","log","post","res","Fragment","withPreview","buttonText","label","onChange","this","imgExtension","buttonClassName","onClick","NTULibrary","lat","lng","PLACES","name","getInfoWindowString","place","googleMap","renderGoogleApi","map","maps","places","markers","infowindows","forEach","push","Marker","position","location","InfoWindow","content","marker","i","addListener","open","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","Content","exact","path","component","GoogleMap","Tripago","basename","public_URL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61126987.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n\n  render () {\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"/\">Tripago\n        </a>\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/\">yeah</a>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default Header","import React, { Component } from 'react'\nimport { NavLink } from \"react-router-dom\";\n\nimport './components.css'\n\nclass Sidebar extends Component {\n\n  render () {\n    return (\n      <div className=\"position-sticky pt-3 sidebar\">\n        <h5> NTU Travel </h5>\n        <ul className=\"nav flex-column align-items-start\">\n          <li className=\"nav-item mr-0\">\n            <NavLink to=\"/imageUploader\" className=\"nav-link\">Image Uploader</NavLink>\n          </li>\n          <li className=\"nav-item mr-0\">\n            <NavLink to=\"/travelMap\" className=\"nav-link\">Travel Map</NavLink>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar","import React, { Component } from 'react'\nimport axios from 'axios'\nimport ImageUploadField from \"react-images-upload\"\n\nimport './components.css'\n\nconst URL_ROOT = 'http://localhost:4000'\n// const URL_ROOT = 'https://my-tripago.an.r.appspot.com' // GCP App Engine URL\n\nconst instance = axios.create({\n  baseURL: URL_ROOT\n})\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pictures: [] }; // type: [File,]\n  }\n\n  onDrop = (pictureFiles, pictureDataURLs) => {\n    this.setState(state => ({\n      pictures: state.pictures.concat(pictureFiles)\n    }));\n  }\n\n  onUpload = async () => {\n    console.log('upload images to backend')\n\n\n    let res = await instance.post('/upload', {'data': 'testmsg'})\n    console.log(res)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ImageUploadField\n          withPreview={true}\n          buttonText=\"Choose images\"\n          label=\"Max file size = 5mb\"\n          onChange={this.onDrop}\n          imgExtension={[\".jpg\", \".gif\", \".png\"]}\n          buttonClassName=\"image-uploader__button\"\n        />\n        <button className=\"image-upload-button\" onClick={() => this.onUpload() }>Upload</button>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ImageUploader","import React, { Component } from 'react'\nimport axios from 'axios'\nimport GoogleMap from 'google-map-react'\n\nimport './components.css'\n\nconst NTULibrary = {lat: 25.0174, lng: 121.5405}\nconst NTUSportsCenter = {lat: 25.0222, lng: 121.5354}\nconst NTUCommon = {lat: 25.0160, lng: 121.5375}\n\nconst PLACES = [\n  {name: 'NTUSportsCenter', 'location': NTUSportsCenter},\n  {name: 'NTUCommon', 'location': NTUCommon},\n]\n\nconst getInfoWindowString = (place) => `\n  <div class=\"info-window\">\n    <div class=\"place-name\">\n      ${place.name}\n    </div>\n  </div>`;\n\nclass googleMap extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      places: PLACES,\n    }\n  }\n\n  renderGoogleApi = (map, maps, places) => {  // map is the map instance, maps is the maps API object\n\n    const markers = [];\n    const infowindows = [];\n\n    places.forEach((place) => {\n      markers.push(new maps.Marker({\n        position: {\n          lat: place.location.lat,\n          lng: place.location.lng,\n        },\n        map,\n      }))\n      infowindows.push(new maps.InfoWindow({\n        content: getInfoWindowString(place),\n      }))\n    })\n\n    markers.forEach((marker, i) => {\n      marker.addListener('click', () => {\n        infowindows[i].open(map, marker);\n      })\n    })\n  }\n\n  render () {\n    const { places } = this.state\n\n    return (\n      <div className=\"google-map\">\n        <GoogleMap\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY }}\n          defaultCenter={NTULibrary}\n          defaultZoom={15}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({map, maps}) => this.renderGoogleApi(map, maps, places)}\n        >\n        </GoogleMap>\n      </div>\n    )\n  }\n}\n\nexport default googleMap","import React, { Component } from 'react'\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ImageUploader from './imageUploader.js'\nimport GoogleMap from './googleMap.js'\n\nclass Content extends Component {\n\n  render () {\n    return (\n      <div className=\"h-100\">\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n          <Switch>\n            <Route exact path=\"/\" >Home</Route>\n            <Route path=\"/imageUploader\" >Image Uploader</Route>\n            <Route path=\"/travelMap\" >Travel Map</Route>\n        </Switch>\n        </div>\n        <Switch>\n          <Route path=\"/imageUploader\" component={ImageUploader}/>\n          <Route path=\"/travelMap\" component={GoogleMap}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default Content","import React, { Component } from 'react'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Header from '../components/header.js'\nimport Sidebar from '../components/sidebar.js'\nimport Content from '../components/content.js'\n\nclass Tripago extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={ process.env.public_URL }>\n        <Header />\n        <div className=\"container-fluid h-100\">\n          <div className=\"row h-100\">\n            <div className=\"col-4 col-sm-3 col-lg-2 d-md-block bg-light sidebar\">\n              <Sidebar />\n            </div>\n            <div className=\"col-8 col-sm-9 col-lg-10 px-md-4\">\n              <Content />\n            </div>\n          </div>\n        </div>\n        \n      </BrowserRouter>\n\n    )\n  }\n}\n\nexport default Tripago","import logo from './logo.svg';\nimport './App.css';\n\nimport Tripago from './containers/tripago.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tripago />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootswatch/dist/lux/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}